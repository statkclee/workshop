---
title: "세종과학예술영재학교"
editor_options: 
  chunk_output_type: console
filters:
   - include-code-files
---



# 온라인 메모장

- [코드 및 관련 자료 공유](https://hackmd.io/@_NnKkWt7T5iYIToOD1QWRg/HJY8_EEhT/edit)
- [JS_Land 수업자료실](https://kimjs.quarto.pub/stat/)

# 글쓰기

- 구성요소
  - 마크다운 문서: <https://hackmd.io/>
  - 마크다운 표: <https://tableconvert.com/markdown-generator>
  - 수식($\LaTeX$): <https://latexeditor.lagrida.com/>
  - 도표(diagram)/작업흐름도(flowchart): <https://mermaid.live/>
  - 그래프
    - plotly studio: <https://chart-studio.plotly.com/create/>
    - desmos: <https://www.desmos.com/>
  - 텍스트2이미지: <https://www.bing.com/images/create>  

# 과학기술 저작

::: {.panel-tabset}
### 챗GPT 유닉스 쉘

📘 교보 POD 종이책: <https://bit.ly/434h5y9>

📗 교보 전자책: [https://bit.ly/KzUdOU](https://bit.ly/3KzUdOU)

🌐 웹사이트: <https://bit.ly/3I4FpWS>

💻 소스코드: [https://bit.ly/3wrgeuP](https://bit.ly/49p0I1f)

### 챗GPT SQL

📘 교보 POD 종이책: <https://bit.ly/3OJmMeT>

📗 교보 전자책: <https://bit.ly/48fujZD>

🌐 웹사이트: <https://bit.ly/48gYn7d>

💻 소스코드: <https://bit.ly/3wrgeuP>

### 챗GPT 쿼토

📘 교보 POD 종이책: 추후 공개

📗 교보 전자책: 추후 공개

🌐 웹사이트: <https://r2bit.com/gpt-quarto/>

💻 소스코드: <https://github.com/bit2r/gpt-quarto>

### 챗GPT 확률통계

예정

:::


## 실습 예제 

::: {.panel-tabset}

### 문서

```{.python include="data/markdown_sample.md"}
```

### 표

```{.python include="data/markdown_table.md"}
```

### 수식

```{.python include="data/markdown_math.md"}
```

### 다이어그램

```{.python include="data/markdown_diagram.md"}
```

### 이미지

- 프롬프트: draw Korean ink painting style landscape image, sephia tone, minimalism
- 엔진: 마이크로소프트 copilot
- 인터페이스: 엣지 <https://www.bing.com/images/create/>

![](images/_f9e38cf4-8c32-4d51-8b18-2b55328426a3.jpg)


:::



# R 프로그래밍

## 시군구

```{r}
#| eval: false
library(tidyverse)
library(httr)
library(rvest)

sigungu_url <- "https://ko.wikipedia.org/wiki/대한민국의_기초자치단체_목록"

sgg_html <- read_html(sigungu_url)

sgg_raw <- sgg_html |> 
  html_nodes("table") |>
  html_table() %>%
  .[[1]]

sgg_raw |> 
  janitor::clean_names(ascii = FALSE)  
  # 데이터 정제과정

```


## 대통령 선거

### 데이터 수집

```{r}
#| eval: false

election_url <- "https://ko.wikipedia.org/wiki/역대_대한민국_대통령_선거_결과"

election_html <- read_html(election_url)

## 대통령 선거명
election_names <- election_html |> 
  html_nodes("h3") |> 
  html_text()

## 대통령 선거 테이블
election_table_text <- election_html |> 
  html_nodes('table') |> 
  html_text() 

election_table_idx <- election_table_text |> 
  enframe() |> 
  mutate(text_length = str_length(value)) |> 
  filter(text_length > 100) |> 
  pull(name)

election_table <- election_html |> 
  html_nodes('table') |> 
  html_table() %>%
  .[dput(election_table_idx)] |> 
  enframe(value = "표") |> 
  slice(2:n())
  
## 결합

election_raw <- tibble(선거 = election_names) |> 
  bind_cols(election_table) |> 
  select(-name) |> 
  mutate(선거 = str_extract(선거, "제[0-9]{1,2}대"))

```

### 스크립트

```{r}
#| eval: false

election_raw$표[[1]] |> 
  janitor::clean_names(ascii = FALSE) |> 
  mutate(x1 = ifelse(x1 == "", NA_character_, x1)) |> 
  fill(x1) |> 
  filter(x1 == "후보") |> 
  janitor::row_to_names(row_number = 1) |> 
  janitor::clean_names(ascii = FALSE) |>
  filter(!is.na(정당)) |> 
  select(-후보, -na, -na_2) |> 
  rename(후보 = 후보_2)
  
```


### 함수

```{r}
#| eval: false

clean_dataframe <- function(dataframe) {
  dataframe |> 
    janitor::clean_names(ascii = FALSE) |> 
    mutate(x1 = ifelse(x1 == "", NA_character_, x1)) |> 
    fill(x1) |> 
    filter(x1 == "후보") |> 
    janitor::row_to_names(row_number = 1) |> 
    janitor::clean_names(ascii = FALSE) |>
    filter(!is.na(정당)) |> 
    select(-후보, -na, -na_2) |> 
    rename(후보 = 후보_2)
}

clean_dataframe(election_raw$표[[1]])
  
```

### 결합

```{r}
#| eval: false
election_tbl <- election_raw |> 
  mutate(data = map(표, clean_dataframe)) 

fs::dir_create("data")

election_tbl |> 
  write_rds("data/election_tbl.rds")
```


## 시각화


